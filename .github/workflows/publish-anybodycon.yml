name: Build and push AnyBodyCon linux images

on:
  push:
    branches: ['main']
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:


env:
  ANYBODY_VERSION: "8.0"
  ANYBODY_VERSION_PATCH: "0"
  ANYBODY_VERSION_SUFFIX: ""
  BUILD_NUMBER: 4

jobs:
  create-anybodycon-image:
    name:  AnyBodyCon image 
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

            
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            anybody/anybodycon
            ghcr.io/anybody/anybodycon

        
      - name: Log in to the Container registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Build AnyBodyCon image
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile-anybodycon
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}
          build-args: |
            ANYBODY_VERSION=${{ env.ANYBODY_VERSION }}
            ANYBODY_VERSION_PATCH=${{ env.ANYBODY_VERSION_PATCH }}
            ANYBODY_VERSION_SUFFIX=${{ env.ANYBODY_VERSION_SUFFIX }}
            USERNAME=anybodyuser
            USER_UID=1000
            USER_GID=1000
          tags: |
              ghcr.io/anybody/anybodycon:${{ env.ANYBODY_VERSION }}.${{ env.ANYBODY_VERSION_PATCH }}${{ env.ANYBODY_VERSION_SUFFIX }}-${{ env.BUILD_NUMBER }}
              ghcr.io/anybody/anybodycon:${{ env.ANYBODY_VERSION }}.${{ env.ANYBODY_VERSION_PATCH }}${{ env.ANYBODY_VERSION_SUFFIX }}
              ghcr.io/anybody/anybodycon:${{ env.ANYBODY_VERSION }}${{ env.ANYBODY_VERSION_SUFFIX }}
              ghcr.io/anybody/anybodycon:latest${{ env.ANYBODY_VERSION_SUFFIX }}
          labels: |
              org.opencontainers.image.title="anybodycon"
              org.opencontainers.image.description="Minimal image with AnyBody in a linux docker container"
              org.opencontainers.image.version="${{ env.ANYBODY_VERSION }}.${{ env.ANYBODY_VERSION_PATCH }}${{ env.ANYBODY_VERSION_SUFFIX }}"
              org.opencontainers.image.url="https://github.com/AnyBody/anybody-container/pkgs/container/anybodycon"
              org.opencontainers.image.licenses="https://www.anybodytech.com/legal/software-license-agreement/"


  create-anybodycon-devcontainer-image:
    name:  AnyBodyCon DevContainer image 
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

            
    steps:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            anybody/anybodycon-devcontainer
            ghcr.io/anybody/anybodycon-devcontainer

      - name: Log in to the Container registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push AnyBodyCon devcontainer image
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile-anybodycon
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}
          build-args: |
            ANYBODY_VERSION=${{ env.ANYBODY_VERSION }}
            ANYBODY_VERSION_PATCH=${{ env.ANYBODY_VERSION_PATCH }}
            ANYBODY_VERSION_SUFFIX=${{ env.ANYBODY_VERSION_SUFFIX }}
            BASE_IMAGE=mcr.microsoft.com/vscode/devcontainers/universal
            DISTRO=ubuntu
            DISTRO_VERSION=focal
            TAG=2.8.0-focal
            USERNAME=vscode
            USER_UID=1000
            USER_GID=1000
          tags: |
              ghcr.io/anybody/anybodycon-devcontainer:${{ env.ANYBODY_VERSION }}.${{ env.ANYBODY_VERSION_PATCH }}${{ env.ANYBODY_VERSION_SUFFIX }}-${{ env.BUILD_NUMBER }}
              ghcr.io/anybody/anybodycon-devcontainer:${{ env.ANYBODY_VERSION }}.${{ env.ANYBODY_VERSION_PATCH }}${{ env.ANYBODY_VERSION_SUFFIX }}
              ghcr.io/anybody/anybodycon-devcontainer:${{ env.ANYBODY_VERSION }}${{ env.ANYBODY_VERSION_SUFFIX }}
              ghcr.io/anybody/anybodycon-devcontainer:latest${{ env.ANYBODY_VERSION_SUFFIX }}
          labels: |
              org.opencontainers.image.title="anybodycon-devcontainer"
              org.opencontainers.image.description="This is the slim anybodycon image configured for Development Containers, like for example GitHub Codespaces and similar services"
              org.opencontainers.image.version="${{ env.ANYBODY_VERSION }}.${{ env.ANYBODY_VERSION_PATCH }}${{ env.ANYBODY_VERSION_SUFFIX }}"
              org.opencontainers.image.url="https://github.com/AnyBody/anybody-container/pkgs/container/anybodycon-devcontainer"
              org.opencontainers.image.licenses="https://www.anybodytech.com/legal/software-license-agreement/"





  create-github-actions-image:
    name:  AnyBodyCon GitHub Actions image 
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

            
    steps:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            anybody/anybodycon-github-actions
            ghcr.io/anybody/anybodycon-github-actions

      - name: Log in to the Container registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build AnyBodyCon-github-actions image
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile-anybodycon
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}
          build-args: |
            ANYBODY_VERSION=${{ env.ANYBODY_VERSION }}
            ANYBODY_VERSION_PATCH=${{ env.ANYBODY_VERSION_PATCH }}
            ANYBODY_VERSION_SUFFIX=${{ env.ANYBODY_VERSION_SUFFIX }}
            USER_UID=1001
            USER_GID=121
            USERNAME=runner
            GROUPNAME=docker
          tags: |
            ghcr.io/anybody/anybodycon-github-actions:${{ env.anybody_version }}.${{ env.anybody_version_patch }}${{ env.anybody_version_suffix }}-${{ env.build_number }}
            ghcr.io/anybody/anybodycon-github-actions:${{ env.anybody_version }}.${{ env.anybody_version_patch }}${{ env.anybody_version_suffix }}
            ghcr.io/anybody/anybodycon-github-actions:${{ env.anybody_version }}${{ env.anybody_version_suffix }}
            ghcr.io/anybody/anybodycon-github-actions:latest${{ env.anybody_version_suffix }}
          labels: |
            org.opencontainers.image.title="anybodycon-github-actions"
            org.opencontainers.image.description="Image with AnyBody in a linux docker container configured for github actions"
            org.opencontainers.image.version="${{ env.anybody_version }}.${{ env.anybody_version_patch }}${{ env.anybody_version_suffix }}"
            org.opencontainers.image.url="https://github.com/AnyBody/anybody-container/pkgs/container/anybodycon-github-actions"
            org.opencontainers.image.licenses="https://www.anybodytech.com/legal/software-license-agreement/"

            
